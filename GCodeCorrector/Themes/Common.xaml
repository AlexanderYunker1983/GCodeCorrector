<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:shaders="clr-namespace:GCodeCorrector.Shaders"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.buttons.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.toggleswitch.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.textblock.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.textbox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.passwordbox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.datagrid.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.groupbox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/styles/controls.expander.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="WaitControlTemplateWithoutText">
        <Border BorderThickness="0"
                BorderBrush="{x:Static SystemColors.ControlDarkDarkBrush}"
                Background="{DynamicResource GrayBrush8}" Opacity="0.8">
            <DockPanel HorizontalAlignment="Center" 
                       VerticalAlignment="Center">
                <fa5:ImageAwesome Width="64" Height="64" Icon="Solid_Spinner" Spin="True"/>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <Style TargetType="TextBlock" BasedOn="{StaticResource MetroTextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToolTip" >
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="LayoutTransform" Value="{DynamicResource scaleTransf}"/>
    </Style>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource MetroPasswordBox}"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StatusBar" x:Key="RecordsStatusBar">
        <Setter Property="Background"  Value="{DynamicResource ControlBackgroundBrush}"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MahApps.Metro.Styles.MetroButton}">
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="Padding" Value="7,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Style.Resources>
            <Style TargetType="Image">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <shaders:DisabledEffect/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Style.Resources>
            <Style TargetType="Image">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <shaders:DisabledEffect/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>